{"version":3,"file":"inputswitch.d.ts","sources":["inputswitch.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const INPUTSWITCH_VALUE_ACCESSOR: any;\r\nexport declare class InputSwitch implements ControlValueAccessor {\r\n    private cd;\r\n    style: any;\r\n    styleClass: string;\r\n    tabindex: number;\r\n    inputId: string;\r\n    name: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    ariaLabelledBy: string;\r\n    onChange: EventEmitter<any>;\r\n    checked: boolean;\r\n    focused: boolean;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    constructor(cd: ChangeDetectorRef);\r\n    onClick(event: Event, cb: HTMLInputElement): void;\r\n    onInputChange(event: Event): void;\r\n    toggle(event: Event): void;\r\n    updateModel(event: Event, value: boolean): void;\r\n    onFocus(event: Event): void;\r\n    onBlur(event: Event): void;\r\n    writeValue(checked: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n}\r\nexport declare class InputSwitchModule {\r\n}\r\n"]}