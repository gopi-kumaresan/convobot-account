{"version":3,"file":"calendar.d.ts","sources":["calendar.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnDestroy, OnInit, EventEmitter, Renderer2, ChangeDetectorRef, TemplateRef, QueryList, NgZone } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const CALENDAR_VALUE_ACCESSOR: any;\r\nexport interface LocaleSettings {\r\n    firstDayOfWeek?: number;\r\n    dayNames: string[];\r\n    dayNamesShort: string[];\r\n    dayNamesMin: string[];\r\n    monthNames: string[];\r\n    monthNamesShort: string[];\r\n    today: string;\r\n    clear: string;\r\n    dateFormat?: string;\r\n    weekHeader?: string;\r\n}\r\nexport declare class Calendar implements OnInit, OnDestroy, ControlValueAccessor {\r\n    el: ElementRef;\r\n    renderer: Renderer2;\r\n    cd: ChangeDetectorRef;\r\n    private zone;\r\n    style: any;\r\n    styleClass: string;\r\n    inputStyle: any;\r\n    inputId: string;\r\n    name: string;\r\n    inputStyleClass: string;\r\n    placeholder: string;\r\n    ariaLabelledBy: string;\r\n    disabled: any;\r\n    dateFormat: string;\r\n    multipleSeparator: string;\r\n    rangeSeparator: string;\r\n    inline: boolean;\r\n    showOtherMonths: boolean;\r\n    selectOtherMonths: boolean;\r\n    showIcon: boolean;\r\n    icon: string;\r\n    appendTo: any;\r\n    readonlyInput: boolean;\r\n    shortYearCutoff: any;\r\n    monthNavigator: boolean;\r\n    yearNavigator: boolean;\r\n    hourFormat: string;\r\n    timeOnly: boolean;\r\n    stepHour: number;\r\n    stepMinute: number;\r\n    stepSecond: number;\r\n    showSeconds: boolean;\r\n    required: boolean;\r\n    showOnFocus: boolean;\r\n    showWeek: boolean;\r\n    dataType: string;\r\n    selectionMode: string;\r\n    maxDateCount: number;\r\n    showButtonBar: boolean;\r\n    todayButtonStyleClass: string;\r\n    clearButtonStyleClass: string;\r\n    autoZIndex: boolean;\r\n    baseZIndex: number;\r\n    panelStyleClass: string;\r\n    panelStyle: any;\r\n    keepInvalid: boolean;\r\n    hideOnDateTimeSelect: boolean;\r\n    numberOfMonths: number;\r\n    view: string;\r\n    touchUI: boolean;\r\n    timeSeparator: string;\r\n    focusTrap: boolean;\r\n    showTransitionOptions: string;\r\n    hideTransitionOptions: string;\r\n    onFocus: EventEmitter<any>;\r\n    onBlur: EventEmitter<any>;\r\n    onClose: EventEmitter<any>;\r\n    onSelect: EventEmitter<any>;\r\n    onInput: EventEmitter<any>;\r\n    onTodayClick: EventEmitter<any>;\r\n    onClearClick: EventEmitter<any>;\r\n    onMonthChange: EventEmitter<any>;\r\n    onYearChange: EventEmitter<any>;\r\n    onClickOutside: EventEmitter<any>;\r\n    onShow: EventEmitter<any>;\r\n    templates: QueryList<any>;\r\n    _locale: LocaleSettings;\r\n    tabindex: number;\r\n    inputfieldViewChild: ElementRef;\r\n    content: ElementRef;\r\n    contentViewChild: ElementRef;\r\n    value: any;\r\n    dates: any[];\r\n    months: any[];\r\n    monthPickerValues: any[];\r\n    weekDays: string[];\r\n    currentMonth: number;\r\n    currentYear: number;\r\n    currentHour: number;\r\n    currentMinute: number;\r\n    currentSecond: number;\r\n    pm: boolean;\r\n    mask: HTMLDivElement;\r\n    maskClickListener: Function;\r\n    overlay: HTMLDivElement;\r\n    overlayVisible: boolean;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    calendarElement: any;\r\n    timePickerTimer: any;\r\n    documentClickListener: any;\r\n    ticksTo1970: number;\r\n    yearOptions: number[];\r\n    focus: boolean;\r\n    isKeydown: boolean;\r\n    filled: boolean;\r\n    inputFieldValue: string;\r\n    _minDate: Date;\r\n    _maxDate: Date;\r\n    _showTime: boolean;\r\n    _yearRange: string;\r\n    preventDocumentListener: boolean;\r\n    dateTemplate: TemplateRef<any>;\r\n    disabledDateTemplate: TemplateRef<any>;\r\n    _disabledDates: Array<Date>;\r\n    _disabledDays: Array<number>;\r\n    selectElement: any;\r\n    todayElement: any;\r\n    focusElement: any;\r\n    documentResizeListener: any;\r\n    navigationState: any;\r\n    isMonthNavigate: boolean;\r\n    initialized: boolean;\r\n    defaultDate: Date;\r\n    _defaultDate: Date;\r\n    minDate: Date;\r\n    maxDate: Date;\r\n    disabledDates: Date[];\r\n    disabledDays: number[];\r\n    yearRange: string;\r\n    showTime: boolean;\r\n    locale: LocaleSettings;\r\n    constructor(el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, zone: NgZone);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    populateYearOptions(start: any, end: any): void;\r\n    createWeekDays(): void;\r\n    createMonthPickerValues(): void;\r\n    createMonths(month: number, year: number): void;\r\n    getWeekNumber(date: Date): number;\r\n    createMonth(month: number, year: number): {\r\n        month: number;\r\n        year: number;\r\n        dates: any[];\r\n        weekNumbers: any[];\r\n    };\r\n    initTime(date: Date): void;\r\n    navBackward(event: any): void;\r\n    navForward(event: any): void;\r\n    decrementYear(): void;\r\n    incrementYear(): void;\r\n    onDateSelect(event: any, dateMeta: any): void;\r\n    shouldSelectDate(dateMeta: any): boolean;\r\n    onMonthSelect(event: any, index: any): void;\r\n    updateInputfield(): void;\r\n    formatDateTime(date: any): any;\r\n    setCurrentHourPM(hours: number): void;\r\n    selectDate(dateMeta: any): void;\r\n    updateModel(value: any): void;\r\n    getFirstDayOfMonthIndex(month: number, year: number): number;\r\n    getDaysCountInMonth(month: number, year: number): number;\r\n    getDaysCountInPrevMonth(month: number, year: number): number;\r\n    getPreviousMonthAndYear(month: number, year: number): {\r\n        'month': any;\r\n        'year': any;\r\n    };\r\n    getNextMonthAndYear(month: number, year: number): {\r\n        'month': any;\r\n        'year': any;\r\n    };\r\n    getSundayIndex(): number;\r\n    isSelected(dateMeta: any): boolean;\r\n    isMonthSelected(month: number): boolean;\r\n    isDateEquals(value: any, dateMeta: any): boolean;\r\n    isDateBetween(start: any, end: any, dateMeta: any): boolean;\r\n    isSingleSelection(): boolean;\r\n    isRangeSelection(): boolean;\r\n    isMultipleSelection(): boolean;\r\n    isToday(today: any, day: any, month: any, year: any): boolean;\r\n    isSelectable(day: any, month: any, year: any, otherMonth: any): boolean;\r\n    isDateDisabled(day: number, month: number, year: number): boolean;\r\n    isDayDisabled(day: number, month: number, year: number): boolean;\r\n    onInputFocus(event: Event): void;\r\n    onInputClick(): void;\r\n    onInputBlur(event: Event): void;\r\n    onButtonClick(event: any, inputfield: any): void;\r\n    onPrevButtonClick(event: any): void;\r\n    onNextButtonClick(event: any): void;\r\n    onContainerButtonKeydown(event: any): void;\r\n    onInputKeydown(event: any): void;\r\n    onDateCellKeydown(event: any, date: any, groupIndex: any): void;\r\n    onMonthCellKeydown(event: any, index: any): void;\r\n    navigateToMonth(prev: any, groupIndex: any): void;\r\n    updateFocus(): void;\r\n    initFocusableCell(): void;\r\n    trapFocus(event: any): void;\r\n    onMonthDropdownChange(m: string): void;\r\n    onYearDropdownChange(y: string): void;\r\n    convertTo24Hour: (hours: number, pm: boolean) => number;\r\n    validateTime(hour: number, minute: number, second: number, pm: boolean): boolean;\r\n    incrementHour(event: any): void;\r\n    onTimePickerElementMouseDown(event: Event, type: number, direction: number): void;\r\n    onTimePickerElementMouseUp(event: Event): void;\r\n    onTimePickerElementMouseLeave(): void;\r\n    repeat(event: Event, interval: number, type: number, direction: number): void;\r\n    clearTimePickerTimer(): void;\r\n    decrementHour(event: any): void;\r\n    incrementMinute(event: any): void;\r\n    decrementMinute(event: any): void;\r\n    incrementSecond(event: any): void;\r\n    decrementSecond(event: any): void;\r\n    updateTime(): void;\r\n    toggleAMPM(event: any): void;\r\n    onUserInput(event: any): void;\r\n    isValidSelection(value: any): boolean;\r\n    parseValueFromString(text: string): Date | Date[];\r\n    parseDateTime(text: any): Date;\r\n    populateTime(value: any, timeString: any, ampm: any): void;\r\n    updateUI(): void;\r\n    showOverlay(): void;\r\n    hideOverlay(): void;\r\n    toggle(): void;\r\n    onOverlayAnimationStart(event: AnimationEvent): void;\r\n    onOverlayAnimationDone(event: AnimationEvent): void;\r\n    appendOverlay(): void;\r\n    restoreOverlayAppend(): void;\r\n    alignOverlay(): void;\r\n    enableModality(element: any): void;\r\n    disableModality(): void;\r\n    unbindMaskClickListener(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    getDateFormat(): string;\r\n    formatDate(date: any, format: any): string;\r\n    formatTime(date: any): string;\r\n    parseTime(value: any): {\r\n        hour: number;\r\n        minute: number;\r\n        second: number;\r\n    };\r\n    parseDate(value: any, format: any): any;\r\n    daylightSavingAdjust(date: any): any;\r\n    updateFilledState(): void;\r\n    onTodayButtonClick(event: any): void;\r\n    onClearButtonClick(event: any): void;\r\n    bindDocumentClickListener(): void;\r\n    unbindDocumentClickListener(): void;\r\n    bindDocumentResizeListener(): void;\r\n    unbindDocumentResizeListener(): void;\r\n    isOutsideClicked(event: Event): boolean;\r\n    isNavIconClicked(event: Event): boolean;\r\n    onWindowResize(): void;\r\n    onOverlayHide(): void;\r\n    ngOnDestroy(): void;\r\n}\r\nexport declare class CalendarModule {\r\n}\r\n"]}