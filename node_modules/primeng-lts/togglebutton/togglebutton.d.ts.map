{"version":3,"file":"togglebutton.d.ts","sources":["togglebutton.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const TOGGLEBUTTON_VALUE_ACCESSOR: any;\r\nexport declare class ToggleButton implements ControlValueAccessor, AfterViewInit {\r\n    onLabel: string;\r\n    offLabel: string;\r\n    onIcon: string;\r\n    offIcon: string;\r\n    ariaLabelledBy: string;\r\n    disabled: boolean;\r\n    style: any;\r\n    styleClass: string;\r\n    inputId: string;\r\n    tabindex: number;\r\n    iconPos: string;\r\n    onChange: EventEmitter<any>;\r\n    checkboxViewChild: ElementRef;\r\n    checkbox: HTMLInputElement;\r\n    checked: boolean;\r\n    focus: boolean;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    ngAfterViewInit(): void;\r\n    toggle(event: Event): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n    readonly hasOnLabel: boolean;\r\n    readonly hasOffLabel: boolean;\r\n}\r\nexport declare class ToggleButtonModule {\r\n}\r\n"]}