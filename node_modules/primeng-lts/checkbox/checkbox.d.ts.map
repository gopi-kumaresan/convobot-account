{"version":3,"file":"checkbox.d.ts","sources":["checkbox.d.ts"],"names":[],"mappings":"AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl } from '@angular/forms';\r\nexport declare const CHECKBOX_VALUE_ACCESSOR: any;\r\nexport declare class Checkbox implements ControlValueAccessor {\r\n    private cd;\r\n    value: any;\r\n    name: string;\r\n    disabled: boolean;\r\n    binary: boolean;\r\n    label: string;\r\n    ariaLabelledBy: string;\r\n    ariaLabel: string;\r\n    tabindex: number;\r\n    inputId: string;\r\n    style: any;\r\n    styleClass: string;\r\n    labelStyleClass: string;\r\n    formControl: FormControl;\r\n    checkboxIcon: string;\r\n    readonly: boolean;\r\n    required: boolean;\r\n    inputViewChild: ElementRef;\r\n    onChange: EventEmitter<any>;\r\n    model: any;\r\n    onModelChange: Function;\r\n    onModelTouched: Function;\r\n    focused: boolean;\r\n    checked: boolean;\r\n    constructor(cd: ChangeDetectorRef);\r\n    onClick(event: any, checkbox: any, focus: boolean): void;\r\n    updateModel(event: any): void;\r\n    handleChange(event: any): void;\r\n    isChecked(): boolean;\r\n    removeValue(): void;\r\n    addValue(): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    focus(): void;\r\n    writeValue(model: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    setDisabledState(val: boolean): void;\r\n}\r\nexport declare class CheckboxModule {\r\n}\r\n"]}