{"version":3,"file":"primeng-lts-focustrap.js","sources":["primeng-lts/focustrap/focustrap.ts","primeng-lts/focustrap/primeng-lts-focustrap.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAOa,SAAS,GAAtB,MAAa,SAAS;AAEtB,IAEI,YAAmB,EAAc;AACrC,QADuB,OAAE,GAAF,EAAE,CAAY;AAAE,KAAE;AAEzC,IAEI,SAAS,CAAC,CAAC;AACd,QAAO,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,EAAE;AAC7C,YAAW,CAAC,CAAC,cAAc,EAAE,CAAC;AAC9B,YAAW,IAAI,iBAAiB,GAAG,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC1F,YAAW,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;AAClE,gBAAe,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AAC5C,oBAAmB,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAChD,iBAAgB;AAChB,qBAAoB;AACpB,oBAAmB,IAAI,YAAY,GAAG,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AAEzF,oBAAoB,IAAI,CAAC,CAAC,QAAQ,EAAE;AACnC,wBAAuB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;AACnE,4BAA2B,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnF;AACC,4BAA0B,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACvE,qBAAoB;AACpB,yBAAwB;AACxB,wBAAuB,IAAI,YAAY,IAAI,CAAC,CAAC,IAAI,YAAY,MAAM,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;AAChG,4BAA2B,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACxD;AACC,4BAA0B,iBAAiB,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACvE,qBAAoB;AACpB,iBAAgB;AAChB,aAAY;AACZ,SAAQ;AACR,KAAI;AACJ,CAAA;;;;iEAAA;AAED;AACwB,YAlCG,UAAU;AAAI;AAF5B;AAAc,IAAtB,KAAK,EAAE;AAAE,qDAA2B;AAMrC;AAAc,IAFb,YAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;AAC1C,IAAG,YAAY,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,CAAC;AACjD,0CA0BI,CAEL;AApCa,SAAS,qBAHrB,SAAS,CAAC,xCAwCV,IAKY,eAAe,GAA5B,MAAa,eAAe;AAAI,CAAA,CAAA;CA5C5B,QAAQ,EAAE,cAAc,QAC3B,CAAC,KACW,SAAS,CAmCrB,hDAOY,eAAe,qBAL3B,QAAQ,CAAC,WACN,OAAO,EAAE,CAAC;IAAY,CAAC,WACvB,OAAO,EAAE,CAAC,SAAS,CAAC,WACpB,YAAY,EAAE,CAAC,SAAS,CAAC,OAC5B,CAAC,KACW,eAAe,CAAI;;;;;;;;;;;;;;;;;;;;;;;0BAAC;AAAE;ACjDnC;AACC;AACC,GAAC;AAEH;AAAE;AACU","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener, Input} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng-lts/dom';\n\n@Directive({\n    selector: '[pFocusTrap]',\n})\nexport class FocusTrap {\n\n    @Input() pFocusTrapDisabled: boolean;\n\n    constructor(public el: ElementRef) {}\n\n    @HostListener('keydown.tab', ['$event'])\n    @HostListener('keydown.shift.tab', ['$event'])\n    onkeydown(e) {\n        if (this.pFocusTrapDisabled !== true) {\n            e.preventDefault();\n            let focusableElements = DomHandler.getFocusableElements(this.el.nativeElement);\n            if (focusableElements && focusableElements.length > 0) {\n                if (!document.activeElement) {\n                    focusableElements[0].focus();\n                }\n                else {\n                    let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                    if (e.shiftKey) {\n                        if (focusedIndex == -1 || focusedIndex === 0)\n                            focusableElements[focusableElements.length - 1].focus();\n                        else\n                            focusableElements[focusedIndex - 1].focus();\n                    }\n                    else {\n                        if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                            focusableElements[0].focus();\n                        else\n                            focusableElements[focusedIndex + 1].focus();\n                    }\n                }\n            }\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [FocusTrap],\n    declarations: [FocusTrap]\n})\nexport class FocusTrapModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}