{"version":3,"file":"primeng-lts-togglebutton.js","sources":["primeng-lts/togglebutton/togglebutton.ts","primeng-lts/togglebutton/primeng-lts-togglebutton.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,MAIa,2BAA2B,GAAQ;AAC/C,IAAC,OAAO,EAAE,iBAAiB;AAC3B,IAAC,WAAW,EAAE,UAAU,CAAC,MAAM,YAAY,CAAC;AAC5C,IAAC,KAAK,EAAE,IAAI;AACZ,CAAA,CAAC;AAsBF,IAAa,YAAY,GAAzB,MAAa,YAAY;AAAI,IAA7B;AAAiB,QAEJ,YAAO,GAAW,KAAK,CAAC;AAErC,QAAa,aAAQ,GAAW,IAAI,CAAC;AAErC,QAgBa,YAAO,GAAW,MAAM,CAAC;AAEtC,QAAc,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;AAC9D,QAKG,YAAO,GAAY,KAAK,CAAC;AAE7B,QAAI,UAAK,GAAY,KAAK,CAAC;AAC1B,QACG,kBAAa,GAAa,SAAQ,CAAC;AACtC,QACG,mBAAc,GAAa,SAAQ,CAAC;AACvC,KAsDA;AAED,IAvDI,eAAe;AAClB,QAAO,IAAI,IAAI,CAAC,iBAAiB,EAAC;AAClC,YAAW,IAAI,CAAC,QAAQ,GAAsB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;AACnF,SAAQ;AACR,KAAI;AACJ,IACG,MAAM,CAAC,KAAY;AACtB,QAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAW,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC,YAAW,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5C,YAAW,IAAI,CAAC,cAAc,EAAE,CAAC;AACjC,YAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;AAC9B,gBAAe,aAAa,EAAE,KAAK;AACnC,gBAAe,OAAO,EAAE,IAAI,CAAC,OAAO;AACpC,aAAY,CAAC,CAAC;AACd,YAAW,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC9B,gBAAe,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACrC,aAAY;AACZ,SAAQ;AACR,KAAI;AAEL,IAAI,OAAO;AACV,QAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACzB,KAAI;AACJ,IACG,MAAM;AACT,QAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B,QAAO,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7B,KAAI;AACJ,IACG,UAAU,CAAC,KAAU;AAAK,QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC5B,KAAI;AACJ,IACG,gBAAgB,CAAC,EAAY;AAAK,QAC9B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AAC/B,KAAI;AAEL,IAAI,iBAAiB,CAAC,EAAY;AAAK,QAC/B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAChC,KAAI;AACJ,IACG,gBAAgB,CAAC,GAAY;AAAK,QAC9B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AAC3B,KAAI;AACJ,IACG,IAAI,UAAU;AAAM,QAChB,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,KAAI;AACJ,IACG,IAAI,WAAW;AAAM,QACjB,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACtD,KAAI;AACJ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wFAAA;AAzFY;AAAc,IAAtB,KAAK,EAAE;AAAE,6CAAuB;AAExB;AAAc,IAAtB,KAAK,EAAE;AAAE,8CAAuB;AAExB;AAAc,IAAtB,KAAK,EAAE;AAAE,4CAAc;AAEf;AAAc,IAAtB,KAAK,EAAE;AAAE,6CAAe;AAEhB;AAAc,IAAtB,KAAK,EAAE;AAAE,oDAAsB;AAEvB;AAAc,IAAtB,KAAK,EAAE;AAAE,8CAAiB;AAElB;AAEZ,IAFI,KAAK,EAAE;AAAE,2CAAU;AAEX;AAAc,IAAtB,KAAK,EAAE;AAAE,gDAAkB;AAEnB;AAAc,IAAtB,KAAK,EAAE;AAAE,6CAAe;AAEhB;AAAc,IAAtB,KAAK,EAAE;AAAE,8CAAgB;AAEjB;AAAc,IAAtB,KAAK,EAAE;AAAE,6CAAwB;AAExB;AAAc,IAAvB,MAAM,EAAE;AAAE,8CAAgD;AAEpC;AAAc,IAApC,SAAS,CAAC,UAAU,CAAC;AAAE,uDAA6B,CAkEzD;AA5Fa,YAAY,qBApBxB,SAAS,CAAC,3CAiHV,IAKY,kBAAkB,GAA/B,MAAa,kBAAkB;CArH3B,DAqH+B,CAAA,CAAA;MArHvB,EAAE,gBAAgB,WAC1B,QAAQ,EAAE,5CAoHD,kBAAkB,qBAL9B,QAAQ,CAAC,WACN,OAAO,EAAE,CAAC;CAAY,CAAC,WACvB,OAAO,EAAE,CAAC,YAAY,CAAC,WACvB,YAAY,EAAE,CAAC,YAAY,CAAC,OAC/B,CAAC,KACW,kBAAkB,CAAI;;;;;;;;;;;;;;;wBAtG9B,WACD,SAAS,EAAE,CAAC,2BAA2B,CAAC,WACxC,eAAe,EAAE,uBAAuB,CAAC,OAAO,OACnD,CAAC,KACW,YAAY,CA2FxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQD;AAAE;ACjIF;AACC;AACC,GAAC;AAEH;AAAE;AAC6C","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef,ChangeDetectionStrategy} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\n\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ToggleButton),\n  multi: true\n};\n\n@Component({\n    selector: 'p-toggleButton',\n    template: `\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon && !offIcon), \n                'ui-button-text-icon-left': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'left'), \n                'ui-button-text-icon-right': (onIcon && offIcon && hasOnLabel && hasOffLabel && iconPos === 'right'),'ui-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),\n                'ui-state-active': checked,'ui-state-focus':focus,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \n                (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #checkbox type=\"checkbox\" [attr.id]=\"inputId\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.tabindex]=\"tabindex\"\n                    role=\"button\" [attr.aria-pressed]=\"checked\" [attr.aria-labelledby]=\"ariaLabelledBy\" [disabled]=\"disabled\">\n            </div>\n            <span *ngIf=\"onIcon||offIcon\" class=\"ui-button-icon-left\" [class]=\"checked ? this.onIcon : this.offIcon\" [ngClass]=\"{'ui-button-icon-left': (iconPos === 'left'), \n            'ui-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? hasOnLabel ? onLabel : 'ui-btn' : hasOffLabel ? offLabel : 'ui-btn'}}</span>\n        </div>\n    `,\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\n\n    @Input() onLabel: string = 'Yes';\n\n    @Input() offLabel: string = 'No';\n\n    @Input() onIcon: string;\n\n    @Input() offIcon: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() disabled: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() inputId: string;\n\n    @Input() tabindex: number;\n\n    @Input() iconPos: string = 'left';\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\n    \n    checkbox: HTMLInputElement;\n    \n    checked: boolean = false;\n\n    focus: boolean = false;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    ngAfterViewInit() {\n        if (this.checkboxViewChild){\n            this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\n        }\n    }\n    \n    toggle(event: Event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            if (this.checkbox) {\n                this.checkbox.focus();\n            }\n        }\n    }\n\n    onFocus() {\n        this.focus = true;\n    }\n    \n    onBlur() {\n        this.focus = false;\n        this.onModelTouched();\n    }\n    \n    writeValue(value: any) : void {\n        this.checked = value;\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n    \n    get hasOnLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    \n    get hasOffLabel():boolean {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [ToggleButton],\n    declarations: [ToggleButton]\n})\nexport class ToggleButtonModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}